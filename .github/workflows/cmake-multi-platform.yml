name: CMake on multiple platforms

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:
  format-check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Install clang-format
      run: sudo apt-get install -y clang-format
    - name: Check code format
      run: clang-format --dry-run --Werror **/*.cpp **/*.h

  build:
    needs: format-check
    name: ${{ matrix.platform.name }} ${{ matrix.config.name }}
    runs-on: ${{ matrix.platform.os }}

    strategy:
      fail-fast: false
      matrix:
        build_type: [Release, Debug]
        platform:
          - { name: Windows VS2019, os: windows-2019 }
          - { name: Windows VS2022, os: windows-2022 }
          - { name: Linux GCC,      os: ubuntu-latest }
          - { name: Linux Clang,    os: ubuntu-latest, flags: -DCMAKE_C_COMPILER=clang -DCMAKE_CXX_COMPILER=clang++ }
          - { name: macOS,          os: macos-latest }
        config:
          - { name: Shared, flags: -DBUILD_SHARED_LIBS=TRUE }
          - { name: Static, flags: -DBUILD_SHARED_LIBS=FALSE }

    steps:
    - uses: actions/checkout@v3

    - name: Cache CMake
      uses: actions/cache@v3
      with:
        path: |
          build
          ~/.cmake
        key: ${{ runner.os }}-cmake-${{ hashFiles('**/CMakeLists.txt') }}
        restore-keys: |
          ${{ runner.os }}-cmake-

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        ${{ matrix.platform.flags }} ${{ matrix.config.flags }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}
